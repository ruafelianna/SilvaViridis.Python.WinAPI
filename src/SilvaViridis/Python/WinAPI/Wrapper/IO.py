import ctypes as C

from enum import Enum, Flag

from .Consts import INVALID_HANDLE_VALUE
from .Exceptions import raise_ex
from .Utils import str_to_ptr

from ..kernel32 import CreateFile, CloseHandle

class GenericRights(Flag):
    READ = 0x80000000
    WRITE = 0x40000000
    EXECUTE = 0x20000000
    ALL = 0x10000000

class ShareModes(Flag):
    READ = 0x00000001
    WRITE = 0x00000002
    DELETE = 0x00000004

class CreationModes(Enum):
    CREATE_NEW = 1
    CREATE_ALWAYS = 2
    OPEN_EXISTING = 3
    OPEN_ALWAYS = 4
    TRUNCATE_EXISTING = 5

class DeviceType(Enum):
    FILE_DEVICE_BEEP = 0x00000001
    FILE_DEVICE_CD_ROM = 0x00000002
    FILE_DEVICE_CD_ROM_FILE_SYSTEM = 0x00000003
    FILE_DEVICE_CONTROLLER = 0x00000004
    FILE_DEVICE_DATALINK = 0x00000005
    FILE_DEVICE_DFS = 0x00000006
    FILE_DEVICE_DISK = 0x00000007
    FILE_DEVICE_DISK_FILE_SYSTEM = 0x00000008
    FILE_DEVICE_FILE_SYSTEM = 0x00000009
    FILE_DEVICE_INPORT_PORT = 0x0000000a
    FILE_DEVICE_KEYBOARD = 0x0000000b
    FILE_DEVICE_MAILSLOT = 0x0000000c
    FILE_DEVICE_MIDI_IN = 0x0000000d
    FILE_DEVICE_MIDI_OUT = 0x0000000e
    FILE_DEVICE_MOUSE = 0x0000000f
    FILE_DEVICE_MULTI_UNC_PROVIDER = 0x00000010
    FILE_DEVICE_NAMED_PIPE = 0x00000011
    FILE_DEVICE_NETWORK = 0x00000012
    FILE_DEVICE_NETWORK_BROWSER = 0x00000013
    FILE_DEVICE_NETWORK_FILE_SYSTEM = 0x00000014
    FILE_DEVICE_NULL = 0x00000015
    FILE_DEVICE_PARALLEL_PORT = 0x00000016
    FILE_DEVICE_PHYSICAL_NETCARD = 0x00000017
    FILE_DEVICE_PRINTER = 0x00000018
    FILE_DEVICE_SCANNER = 0x00000019
    FILE_DEVICE_SERIAL_MOUSE_PORT = 0x0000001a
    FILE_DEVICE_SERIAL_PORT = 0x0000001b
    FILE_DEVICE_SCREEN = 0x0000001c
    FILE_DEVICE_SOUND = 0x0000001d
    FILE_DEVICE_STREAMS = 0x0000001e
    FILE_DEVICE_TAPE = 0x0000001f
    FILE_DEVICE_TAPE_FILE_SYSTEM = 0x00000020
    FILE_DEVICE_TRANSPORT = 0x00000021
    FILE_DEVICE_UNKNOWN = 0x00000022
    FILE_DEVICE_USB = FILE_DEVICE_UNKNOWN
    FILE_DEVICE_VIDEO = 0x00000023
    FILE_DEVICE_VIRTUAL_DISK = 0x00000024
    FILE_DEVICE_WAVE_IN = 0x00000025
    FILE_DEVICE_WAVE_OUT = 0x00000026
    FILE_DEVICE_8042_PORT = 0x00000027
    FILE_DEVICE_NETWORK_REDIRECTOR = 0x00000028
    FILE_DEVICE_BATTERY = 0x00000029
    FILE_DEVICE_BUS_EXTENDER = 0x0000002a
    FILE_DEVICE_MODEM = 0x0000002b
    FILE_DEVICE_VDM = 0x0000002c
    FILE_DEVICE_MASS_STORAGE = 0x0000002d
    FILE_DEVICE_SMB = 0x0000002e
    FILE_DEVICE_KS = 0x0000002f
    FILE_DEVICE_CHANGER = 0x00000030
    FILE_DEVICE_SMARTCARD = 0x00000031
    FILE_DEVICE_ACPI = 0x00000032
    FILE_DEVICE_DVD = 0x00000033
    FILE_DEVICE_FULLSCREEN_VIDEO = 0x00000034
    FILE_DEVICE_DFS_FILE_SYSTEM = 0x00000035
    FILE_DEVICE_DFS_VOLUME = 0x00000036
    FILE_DEVICE_SERENUM = 0x00000037
    FILE_DEVICE_TERMSRV = 0x00000038
    FILE_DEVICE_KSEC = 0x00000039
    FILE_DEVICE_FIPS = 0x0000003A
    FILE_DEVICE_INFINIBAND = 0x0000003B
    FILE_DEVICE_VMBUS = 0x0000003E
    FILE_DEVICE_CRYPT_PROVIDER = 0x0000003F
    FILE_DEVICE_WPD = 0x00000040
    FILE_DEVICE_BLUETOOTH = 0x00000041
    FILE_DEVICE_MT_COMPOSITE = 0x00000042
    FILE_DEVICE_MT_TRANSPORT = 0x00000043
    FILE_DEVICE_BIOMETRIC = 0x00000044
    FILE_DEVICE_PMI = 0x00000045
    FILE_DEVICE_EHSTOR = 0x00000046
    FILE_DEVICE_DEVAPI = 0x00000047
    FILE_DEVICE_GPIO = 0x00000048
    FILE_DEVICE_USBEX = 0x00000049
    FILE_DEVICE_CONSOLE = 0x00000050
    FILE_DEVICE_NFP = 0x00000051
    FILE_DEVICE_SYSENV = 0x00000052
    FILE_DEVICE_VIRTUAL_BLOCK = 0x00000053
    FILE_DEVICE_POINT_OF_SERVICE = 0x00000054
    FILE_DEVICE_STORAGE_REPLICATION = 0x00000055
    FILE_DEVICE_TRUST_ENV = 0x00000056
    FILE_DEVICE_UCM = 0x00000057
    FILE_DEVICE_UCMTCPCI = 0x00000058
    FILE_DEVICE_PERSISTENT_MEMORY = 0x00000059
    FILE_DEVICE_NVDIMM = 0x0000005a
    FILE_DEVICE_HOLOGRAPHIC = 0x0000005b
    FILE_DEVICE_SDFXHCI = 0x0000005c
    FILE_DEVICE_UCMUCSI = 0x0000005d
    FILE_DEVICE_PRM = 0x0000005e
    FILE_DEVICE_EVENT_COLLECTOR = 0x0000005f
    FILE_DEVICE_USB4 = 0x00000060
    FILE_DEVICE_SOUNDWIRE = 0x00000061

class BufferPassMethods(Enum):
    BUFFERED = 0
    IN_DIRECT = 1
    OUT_DIRECT = 2
    NEITHER = 3

class FileAccess(Enum):
    ANY = 0
    SPECIAL = ANY
    READ = 0x0001
    WRITE = 0x0002

class UserModeIOCTLFunctionCodes(Enum):
    HCD_GET_STATS_1 = 255
    HCD_DIAGNOSTIC_MODE_ON = 256
    HCD_DIAGNOSTIC_MODE_OFF = 257
    HCD_GET_ROOT_HUB_NAME = 258
    HCD_GET_DRIVERKEY_NAME = 265
    HCD_GET_STATS_2 = 266
    HCD_DISABLE_PORT = 268
    HCD_ENABLE_PORT = 269
    HCD_USER_REQUEST = 270
    HCD_TRACE_READ_REQUEST = 275
    USB_GET_NODE_INFORMATION = 258
    USB_GET_NODE_CONNECTION_INFORMATION = 259
    USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION = 260
    USB_GET_NODE_CONNECTION_NAME = 261
    USB_DIAG_IGNORE_HUBS_ON = 262
    USB_DIAG_IGNORE_HUBS_OFF = 263
    USB_GET_NODE_CONNECTION_DRIVERKEY_NAME = 264
    USB_GET_HUB_CAPABILITIES = 271
    USB_GET_NODE_CONNECTION_ATTRIBUTES = 272
    USB_HUB_CYCLE_PORT = 273
    USB_GET_NODE_CONNECTION_INFORMATION_EX = 274
    USB_RESET_HUB = 275
    USB_GET_HUB_CAPABILITIES_EX = 276
    USB_GET_HUB_INFORMATION_EX = 277
    USB_GET_PORT_CONNECTOR_PROPERTIES = 278
    USB_GET_NODE_CONNECTION_INFORMATION_EX_V2 = 279
    USB_GET_TRANSPORT_CHARACTERISTICS = 281
    USB_REGISTER_FOR_TRANSPORT_CHARACTERISTICS_CHANGE = 282
    USB_NOTIFY_ON_TRANSPORT_CHARACTERISTICS_CHANGE = 283
    USB_UNREGISTER_FOR_TRANSPORT_CHARACTERISTICS_CHANGE = 284
    USB_START_TRACKING_FOR_TIME_SYNC = 285
    USB_GET_FRAME_NUMBER_AND_QPC_FOR_TIME_SYNC = 286
    USB_STOP_TRACKING_FOR_TIME_SYNC = 287
    USB_GET_DEVICE_CHARACTERISTICS = 288

def create_file(
    path : str,
    access : GenericRights,
    share_mode : ShareModes,
    creation_mode : CreationModes,
) -> C.c_void_p:
    fd = CreateFile(
        str_to_ptr(path),
        access.value,
        share_mode.value,
        None,
        creation_mode.value,
        0,
        None,
    )

    if int(fd) == INVALID_HANDLE_VALUE:
        raise_ex(C.GetLastError())

    return fd

def close_file(
    fd : C.c_void_p,
) -> None:
    CloseHandle(fd)

def ctl_code(
    dev_type : DeviceType,
    function : UserModeIOCTLFunctionCodes,
    method : BufferPassMethods,
    access : FileAccess,
) -> int:
    return (dev_type.value << 16) \
        | (access.value << 14) \
        | (function.value << 2) \
        | method.value

class CtlCodes(Enum):
    IOCTL_GET_HCD_DRIVERKEY_NAME = ctl_code(
        DeviceType.FILE_DEVICE_USB,
        UserModeIOCTLFunctionCodes.HCD_GET_DRIVERKEY_NAME,
        BufferPassMethods.BUFFERED,
        FileAccess.ANY,
    )
